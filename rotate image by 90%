class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {

        int m= matrix.size();
        int n= matrix[0].size();

        for(int i=0;i<m;i++){
            for(int j=i+1;j<n;j++){
                swap(matrix[i][j],matrix[j][i]);
            }
        }

        for (int i = 0; i < m; i++) {
        int low = 0, high = m - 1;
        while (low < high) {
            swap(matrix[i][low], matrix[i][high]);
            low++;
            high--;
        }
    }
        
    }
};

// optimal solution 

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int row = matrix.size();
        for(int i=0;i<row; i++){
            for(int j=0; j<=i;j++){
                swap(matrix[i][j], matrix[j][i]);
            }
        }
        for(int i=0;i<row;i++){
            reverse(matrix[i].begin(), matrix[i].end());
        }
    }
};
