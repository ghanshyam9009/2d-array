class Solution {
public:
    std::vector<std::vector<int>> spiralMatrixIII(int rows, int cols, int rStart, int cStart) {
        std::vector<std::vector<int>> result;
           
        int rowMoves[] = {0, 1, 0, -1};
        int colMoves[] = {1, 0, -1, 0}; 
        
        int dir = 0; 
        int steps = 0; 
        int totalCells = rows * cols; 
             
        int r = rStart;
        int c = cStart;
        
        while (result.size() < totalCells) {
           
            if (dir % 2 == 0) {
                steps++; 
            }
                  
            for (int i = 0; i < steps; i++) {              
                if (r >= 0 && r < rows && c >= 0 && c < cols) {
                    result.push_back({r, c}); 
                }              
                r += rowMoves[dir]; 
                c += colMoves[dir];
            }    
            dir = (dir + 1) % 4;
        }   
        return result;
    }
};
